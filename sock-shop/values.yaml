# Default values for sock-shop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

java:
  options: '-Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false'

replicas: 1

namespace: sock-shop

carts:
  cartsLabel: carts
  containerPort: 80
  image:
    repo: weaveworksdemos/carts
    tag: 0.4.8
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200Mi

cartsdb:
  cartsDbLabel: cartsdb
  image:
    repo: mongo
    tag: 4.4.0
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi

catalogue:
  catalogueLabel: catalogue
  containerPort: 80
  image:
    repo: weaveworksdemos/catalogue
    tag: 0.3.5
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

cataloguedb:
  catalogueDbLabel: catalogue-db
  image:
    repo: weaveworksdemos/catalogue-db
    tag: 0.3.0
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 300Mi

frontend:
  replicas: 2
  frontendLabel: front-end
  image:
    repo: weaveworksdemos/front-end
    tag: 0.3.12
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 300Mi

loadtest:
  enabled: false
  image:
    repo: weaveworksdemos/load-test
    tag: 0.1.1
  replicas: 2
  resources:
    limits:
      cpu: 300m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 300Mi

orders:
  ordersLabel: orders
  containerPort: 80
  image:
    repo: weaveworksdemos/orders
    tag: 0.4.7
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi

ordersdb:
  ordersDbLabel: ordersdb
  image:
    repo: mongo
    tag: 4.4.0
  persistentVolume:
    size: 512Mi
    storageClass: ''
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 500m
      memory: 512Mi

payment:
  paymentLabel: payment
  containerPort: 8080
  declinePaymentsOverAmount: 200
  image:
    repo: weaveworksdemos/payment
    tag: 0.4.3
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 99m
      memory: 100Mi

queuemaster:
  queuemasterLabel: queue-master
  image:
    repo: weaveworksdemos/queue-master
    tag: 0.3.1
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi

rabbitmq:
  rabbitmqLabel: rabbitmq
  image:
    repo: rabbitmq
    tag: 3.6.8
  resources:
    limits:
      cpu: 1
      memory: 512Mi
    requests:
      cpu: 350m
      memory: 256Mi

sessiondb:
  sessionDbLabel: sessiondb
  image:
    repo: redis
    tag: alpine
  persistentVolume:
    size: 512Mi
    storageClass: ''
  resources:
    limits:
      cpu: 250m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 256Mi

shipping:
  shippingLabel: shipping
  containerPort: 80
  image:
    repo: weaveworksdemos/shipping
    tag: 0.4.8
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi

user:
  userLabel: user
  containerPort: 80
  image:
    repo: weaveworksdemos/user
    tag: 0.4.7
  resources:
    limits:
      cpu: 300m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

userdb:
  userdbLabel: user-db
  image:
    repo: weaveworksdemos/user-db
    tag: 0.4.0
  resources:
    limits:
      cpu: 300m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 300Mi
